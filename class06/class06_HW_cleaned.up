---
title: "class06_HW_"
author: "Kalle Liimatta A59002114"
format: pdf
date:  2022-10-17
toc: TRUE
editor: visual
---

# Q6.

**Goal: Create a function that allows the user to input any protein PDB code and outputs a plot for the specified protein as done above.**

We need to create functions that performs the code below.

-   s1 \<- read.pdb("4AKE") \# kinase with drug

-   s2 \<- read.pdb("1AKE") \# kinase no drug

-   s3 \<- read.pdb("1E4Y") \# kinase with drug

-   s1.chainA \<- trim.pdb(s1, chain="A", elety="CA")

-   s2.chainA \<- trim.pdb(s2, chain="A", elety="CA")

-   s3.chainA \<- trim.pdb(s1, chain="A", elety="CA")

-   s1.b \<- s1.chainA\$atom\$b

-   s2.b \<- s2.chainA\$atom\$b

-   s3.b \<- s3.chainA\$atom\$b

-   plotb3(s1.b, sse=s1.chainA, typ="l", ylab="Bfactor")

-   plotb3(s2.b, sse=s2.chainA, typ="l", ylab="Bfactor")

-   plotb3(s3.b, sse=s3.chainA, typ="l", ylab="Bfactor")

## 1) read_function: Input the protein PDB code into the read_function to download and access the PDB file of that protein

```{r}
#s1 <- read.pdb("4AKE")  # kinase with drug 
#s2 <- read.pdb("1AKE")  # kinase no drug 
#s3 <- read.pdb("1E4Y")  # kinase with drug

#simplify to:  x <- read.pdb("X")

read_function <- function(x) {
  x <-read.pdb(x)
}
```

```{r}
#test the read_function
s1 <- read_function("4AKE")
#it works!
```
