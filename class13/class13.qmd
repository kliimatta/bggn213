---
title: "class13"
author:  "Kalle Liimatta A59002114"
toc:  TRUE
format: pdf
editor: visual
---

# Section 1. Differential Expression Analysis

```{r}
library(DESeq2)
```

```{r}
metaFile <- "GSE37704_metadata.csv"
countFile <-"GSE37704_featurecounts.csv"
```

```{r}
#import metadata and take a peak
colData = read.csv(metaFile, row.names=1)
head(colData)
```

```{r}
#import count data
countData = read.csv(countFile, row.names=1)
head(countData)
```

Need countData and colData to match up, so we need to get rid of the odd first column in countData (the length column)

### Q. Complete the code below to remove the troublesome first column from countData

```{r}
#get rid of the $length column
countData <- as.matrix(countData[, -1])
head(countData)
```

```{r}
#to check that the colData names match the countData row names
all(rownames(colData) == colnames(countData))
```

Now, we need to get rid of the 0 entries since these have no data

### **Q**. Complete the code below to filter `countData` to exclude genes (i.e. rows) where we have 0 read count across all samples (i.e. columns).

Tip: What will **rowSums()** of `countData` return and how could you use it in this context?

```{r}
#get the indices that don't equal 0
keep.inds <- rowSums(countData) != 0
head(keep.inds)
```

```{r}
#filter count data where there are 0 read counts across all samples
counts <- countData[keep.inds,]
head(counts)
```

## 

Running DESeq2

```{r}
library(DESeq2)
dds = DESeqDataSetFromMatrix(countData=counts,
                             colData=colData,
                             design=~condition)
dds = DESeq(dds)
```

```{r}
dds
```

```{r}
res <- results(dds)
head(res)
```

### Q. Call the summary() function on your results to get a sense of how many genes are up or down-regulated at the default 0.1 p-value cutoff.

```{r}
summary(res)
```

## Volcano plot

```{r}
plot( res$log2FoldChange, -log(res$padj) )
```

### Q. Improve this plot by completing the below code, which adds color and axis labels

```{r}
# Make a color vector for all genes
mycols <- rep("gray", nrow(res))

# Color red the genes with absolute fold change above 2
mycols[ abs(res$log2FoldChange) > 2 ] <- "red"

# Color blue those with adjusted p-value less than 0.01
#  and absolute fold change more than 2
inds <- (res$padj < 0.01) & (abs(res$log2FoldChange) > 2 )
mycols[ inds ] <- "blue"

plot( res$log2FoldChange, -log(res$padj), col=mycols, xlab="Log2(FoldChange)", ylab="-Log(P-value)")
```

## Adding gene annotation

### Q. Use the mapIDs() function multiple times to add SYMBOL, ENTREZID and GENENAME annotation to our results by completing the code below.

```{r}
#if (!require("BiocManager", quietly = TRUE))
#    install.packages("BiocManager")

#BiocManager::install("org.Hs.eg.db")
```

```{r}
library("AnnotationDbi")
library("org.Hs.eg.db")
columns(org.Hs.eg.db)
```

```{r}
res$symbol <- mapIds(org.Hs.eg.db,
                    keys=rownames(counts), 
                    keytype="ENSEMBL",
                    column="SYMBOL",
                    multiVals="first")

res$entrez = mapIds(org.Hs.eg.db,
                    keys=rownames(counts),
                    keytype="ENSEMBL",
                    column="ENTREZID",
                    multiVals="first")

res$name =   mapIds(org.Hs.eg.db,
                    keys=row.names(res),
                    keytype="ENSEMBL",
                    column="GENENAME",
                    multiVals="first")
head(res, 10)
```

### Q. Finally for this section let's reorder these results by adjusted p-value and save them to a CSV file in your current project directory.

```{r}
res = res[order(res$pvalue),]
write.csv(res, file="deseq_results.csv")
```

# Section 2. Pathway Analysis

```{r}
#BiocManager::install( c("pathview", "gage", "gageData") )

```

```{r}
library(pathview)
library(gage)
library(gageData)

data(kegg.sets.hs)
data(sigmet.idx.hs)

# Focus on signaling and metabolic pathways only
kegg.sets.hs = kegg.sets.hs[sigmet.idx.hs]

# Examine the first 3 pathways
head(kegg.sets.hs, 3)
```

The main **gage()** function requires a named vector of fold changes, where the names of the values are the Entrez gene IDs.

Note that we used the **mapIDs()** function above to obtain Entrez gene IDs (stored in `res$entrez`) and we have the fold change results from DESeq2 analysis (stored in `res$log2FoldChange`).

```{r}
foldchanges = res$log2FoldChange
names(foldchanges) = res$entrez
head(foldchanges)
```

```{r}
# Get the results
keggres = gage(foldchanges, gsets=kegg.sets.hs)
```

```{r}
attributes(keggres)
```

```{r}
# Look at the first few down (less) pathways
head(keggres$less)
```

```{r}
pathview(gene.data=foldchanges, pathway.id="hsa04110")
```

```{r}
knitr::include_graphics("hsa04110.pathview.png")
```

```{r}
# A different PDF based output of the same data
pathview(gene.data=foldchanges, pathway.id="hsa04110", kegg.native=FALSE)
```

```{r}
## Focus on top 5 upregulated pathways here for demo purposes only
keggrespathways <- rownames(keggres$greater)[1:5]

# Extract the 8 character long IDs part of each string
keggresids = substr(keggrespathways, start=1, stop=8)
keggresids
```

```{r}
pathview(gene.data=foldchanges, pathway.id=keggresids, species="hsa")
```

```{r}
knitr::include_graphics("hsa04640.pathview.png")
```

```{r}
knitr::include_graphics("hsa04142.pathview.png")
```

```{r}
knitr::include_graphics("hsa04330.pathview.png")
```

```{r}
knitr::include_graphics("hsa04630.pathview.png")
```

```{r}
knitr::include_graphics("hsa00140.pathview.png")
```

### **Q**. Can you do the same procedure as above to plot the pathview figures for the top 5 down-reguled pathways?

```{r}
keggrespathwaysdown <- rownames(keggres$less)[1:5]
```

```{r}
# Extract the 8 character long IDs part of each string
keggresidsdown = substr(keggrespathwaysdown, start=1, stop=8)
keggresidsdown
```

```{r}
pathview(gene.data=foldchanges, pathway.id=keggresidsdown, species="hsa")
```

```{r}
knitr::include_graphics("hsa04110.pathview.png")
```

```{r}
knitr::include_graphics("hsa03030.pathview.png")
```

```{r}
knitr::include_graphics("hsa03013.pathview.png")
```

```{r}
knitr::include_graphics("hsa03440.pathview.png")
```

```{r}
knitr::include_graphics("hsa04114.pathview.png")
```

# Section 3. Gene Ontology (GO)

```{r}
data(go.sets.hs)
data(go.subs.hs)

# Focus on Biological Process subset of GO
gobpsets = go.sets.hs[go.subs.hs$BP]

gobpres = gage(foldchanges, gsets=gobpsets, same.dir=TRUE)

lapply(gobpres, head)
```

# Section 4. Reactome Analysis

```{r}
sig_genes <- res[res$padj <= 0.05 & !is.na(res$padj), "symbol"]
print(paste("Total number of significant genes:", length(sig_genes)))
```

```{r}
write.table(sig_genes, file="significant_genes.txt", row.names=FALSE, col.names=FALSE, quote=FALSE)
```

### **Q**: What pathway has the most significant "Entities p-value"? Do the most significant pathways listed match your previous KEGG results? What factors could cause differences between the two methods?

Endosomal/Vacuolar pathway has the most significant entities pvalue. The most significant pathways have seem to have a lot to do with the cell cycle/replication, which matches some of the downregulated KEGG results, but not the upregulated results. Differences in how the genes were categorized could cause differences between the two methods.
